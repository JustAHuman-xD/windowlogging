buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'com.github.gmazzo.buildconfig' version '3.0.1'
    id "com.modrinth.minotaur" version "2.+"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: 'https://gist.githubusercontent.com/LordGrimmauld/66f552c0d0bd50763098e92aa22a51df/raw/a4eb350252bdb76a570de110f55b4de19ac92ded/modconfig.gradle'

version = "mc${minecraft_version}_v${mod_version}"
group = "mod.grimmauld.${modid}"
archivesBaseName = modid

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: minecraft_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                windowlogging {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                windowlogging {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }

    maven {
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // debug
    //runtimeOnly fg.deobf("curse.maven:doubleslabs-350179:3061145")
    // runtimeOnly fg.deobf("com.jozufozu.flywheel:Flywheel:1.16-0.2.3.44")
    // runtimeOnly fg.deobf("com.simibubi.create:Create:mc1.16.5_v0.3.2f+464")
    // runtimeOnly fg.deobf("curse.maven:quark-243121:3490981")
    // runtimeOnly fg.deobf("curse.maven:oddities-301051:3088871")
    // runtimeOnly fg.deobf("curse.maven:areg-250363:3326041")
    // runtimeOnly fg.deobf("curse.maven:blockcarpentry-401658:3147183")
    // runtimeOnly fg.deobf("curse.maven:paneintheglass-374529:3432890")
}

compileJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modid}",
                "Specification-Vendor"    : "Grimmauld",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Grimmauld",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

buildConfig {
    buildConfigField 'String', 'MODID', "\"${modid}\""
    buildConfigField 'String', 'VERSION', "\"${project.version}\""
    def gitstage = getGitInfo()
    println("Using git stage ${gitstage}")
    buildConfigField "String", "GITHASH", "\"${gitstage}\""

    version = project.version
    packageName = project.group
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "C6AFOWnr"
    versionNumber = project.version
    versionType = "release"
    uploadFile = jar
    gameVersions = [minecraft_version]
    dependencies {
        // no dependencies
    }
}